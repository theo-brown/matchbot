version: "3"

services:

  database:
    image: "postgres:alpine"
    restart: always
    # Set the database to use POSTGRES_PORT
    command: -p ${POSTGRES_PORT}
    # Forward from POSTGRES_PORT on the host to POSTGRES_PORT on the container
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
    volumes:
      # Use database_volume to store the data
      - database_volume:/var/lib/postgresql/data
      # Execute the database/init scripts on startup
      - ./database/init:/docker-entrypoint-initdb.d

  redis:
    image: "redis:alpine"
    restart: always
    # Set Redis to use REDIS_PORT
    command: --port ${REDIS_PORT}
    # Forward from REDIS_PORT on the host to REDIS_PORT on the container
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}

#  matchstarter:
#    build:
#      context: .
#      dockerfile: matchstarter/Dockerfile
#    depends_on:
#      - database
#    environment:
#      - POSTGRES_HOST='database'
#      - POSTGRES_PORT
#      - POSTGRES_USER
#      - POSTGRES_PASSWORD
#      - POSTGRES_DB
#      - REDIS_HOST='redis'
#      - REDIS_PORT
#    ports:
#    - "$PORT_MIN-$PORT_MAX:$PORT_MIN-$PORT_MAX/tcp"
#    - "$PORT_MIN-$PORT_MAX:$PORT_MIN-$PORT_MAX/udp"
#    - "$GOTV_PORT_MIN-$GOTV_PORT_MAX:$GOTV_PORT_MIN-$GOTV_PORT_MAX/udp"
#    volumes:
#     - /var/run/docker.sock:/var/run/docker.sock

volumes:
  database_volume:
